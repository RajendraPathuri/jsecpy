# vulnerability_patterns.py

vulnerability_patterns = {
    "Broken Access Control": r"HttpServlet(Request|Response)|HttpSession|ServletContext|ServletRequest|ServletResponse|Filter(Chain|Config)|ServletConfig|\.(get|set|add|send|invalidate|doFilter|log|encode|getResource|getRealPath|getServlet|getContext|get(Major|Minor)Version|get(ServerInfo|NamedDispatcher|ServletRegistration|VirtualServerName))",
    "Cryptographic Failures": r"(?i)((java|javax)\.crypto(\.spec)?\.?(security\.(cert|spec))?)([a-zA-Z]*)(\.([a-zA-Z]*))?",
    "Injection": r"(?i)((java(\.util\.logging|\.net|\.security)|javax(\.net\.ssl|\.security\.auth|\.servlet(\.http)?|\.xml(\.parsers|\.validation|\.transform)?|\.management(?:\.remote)?)))(?:[a-zA-Z]*)(?:\.([a-zA-Z]*))?",
    "Security Misconfiguration": r"(?i)((java(\.util\.logging|\.net|\.security)|(\.net\.ssl|\.security\.auth|\.servlet(\.http)?|\.xml(\.parsers|\.validation|\.transform)?|\.management(?:\.remote)?)))(?:[a-zA-Z]*)(?:\.([a-zA-Z]*))?",
    
    "Identification & Authentication Failures": r"HttpServlet(Request|Response)|HttpSession|Servlet(Context|Request|Response)|Filter(Chain|Config)|ServletConfig",
    "Software and data Integrity Failures": r"HttpServlet(Request|Response)|HttpSession|Servlet(Context|Request|Response)|Filter(Chain|Config)|ServletConfig",
    "Security Logging and Monitoring Failures": r"HttpServlet(Request|Response)|HttpSession|Servlet(Context|Request|Response)|Filter(Chain|Config)|ServletConfig",
    "Server-Side Request Forgery": r"HttpServlet(Request|Response)|HttpSession|Servlet(Context|Request|Response)|Filter(Chain|Config)|ServletConfig",
}
